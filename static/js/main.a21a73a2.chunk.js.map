{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/Notification/Notification .js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Statistics","positiveFeedback","neutralFeedback","negativeFeedback","countSum","countPercentage","Section","children","title","Notification","message","defaultProps","App","state","good","neutral","bad","handleEvaluate","key","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","total","percentage","mark","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAGaA,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,6BACGD,EAAQE,KAAI,SAACC,GACZ,OACE,6BACE,wBACEC,KAAK,SACLC,QAAS,WACPJ,EAAgBE,IAHpB,SAMGA,KAPIA,SCLNG,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,iBACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAEA,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCbOC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClC,OACE,oCACE,6BAAKA,IACJD,MCJME,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,4BAAIA,KAGbD,EAAaE,aAAe,CAC1BD,QAAS,qB,IC8CIE,E,4MA/CbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAME,EAAUF,GAAO,O,EAI5BG,mBAAqB,WACnB,OAAO,EAAKR,MAAMC,KAAO,EAAKD,MAAME,QAAU,EAAKF,MAAMG,K,EAG3DM,gCAAkC,WAChC,OAAOC,KAAKC,KAAwB,IAAlB,EAAKX,MAAMC,KAAc,EAAKO,uB,4CAGlD,WACE,MAA+BI,KAAKZ,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBU,EAAQD,KAAKJ,qBACbM,EAAaF,KAAKH,kCAClBM,EAAOC,OAAOC,KAAKL,KAAKZ,OAE9B,OACE,eAAC,EAAD,CAASL,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBd,QAASkC,EAAMjC,gBAAiB8B,KAAKR,iBACtD,cAAC,EAAD,CAAST,MAAM,aAAf,SACGkB,EAAQ,EACP,cAAC,EAAD,CACEzB,iBAAkBa,EAClBZ,gBAAiBa,EACjBZ,iBAAkBa,EAClBZ,SAAUsB,EACVrB,gBAAiBsB,IAGnB,cAAC,EAAD,a,GAxCMI,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a21a73a2.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul>\n      {options.map((option) => {\n        return (\n          <li key={option}>\n            <button\n              type=\"button\"\n              onClick={() => {\n                onLeaveFeedback(option);\n              }}\n            >\n              {option}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Statistics = ({\n  positiveFeedback,\n  neutralFeedback,\n  negativeFeedback,\n  countSum,\n  countPercentage,\n}) => {\n  return (\n    <>\n      <p>Good: {positiveFeedback}</p>\n      <p>Neutral: {neutralFeedback}</p>\n      <p>Bad: {negativeFeedback}</p>\n      <p>Total: {countSum}</p>\n      <p>Positive feedback: {countPercentage}%</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  positiveFeedback: PropTypes.number,\n  neutralFeedback: PropTypes.number,\n  negativeFeedback: PropTypes.number,\n  countSum: PropTypes.number,\n  countPercentage: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Section = ({ children, title }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.defaultProps = {\n  message: \"No feedback given\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport { FeedbackOptions } from \"./Components/FeedbackOptions/FeedbackOptions\";\nimport { Statistics } from \"./Components/Statistics/Statistics\";\nimport { Section } from \"./Components/Section/Section\";\nimport { Notification } from \"./Components/Notification/Notification \";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleEvaluate = (key) => {\n    this.setState((prevState) => ({\n      [key]: prevState[key] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.ceil((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n    const mark = Object.keys(this.state);\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={mark} onLeaveFeedback={this.handleEvaluate} />\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              positiveFeedback={good}\n              neutralFeedback={neutral}\n              negativeFeedback={bad}\n              countSum={total}\n              countPercentage={percentage}\n            />\n          ) : (\n            <Notification />\n          )}\n        </Section>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}